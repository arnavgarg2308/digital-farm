const translations = {
  en: {
    title: "Welcome to Smart Farm Solution",
    subtitle: "Choose your role to continue",
    farmer: "Farmer",
    admin: "Admin",
    buyer: "Buyer/Wholesaler",
    hintLaunch: "Tip: Click role тЖТ Signup (one time) тЖТ Login тЖТ Dashboard",
    loginTitle: "Login to Smart Farm Solution",
    signupTitle: "Create your Account",
    username: "Username",
    password: "Password",
    loginBtn: "Login",
    signupBtn: "Create Account",
    support: "Ai Chat+Support",
    dashboard: "Dashboard",
    Profile:"Profile",
    sup:"Support",
    log:"Logout",
    farmerDash:"ЁЯСитАНЁЯМ╛ Farmer Dashboard",
    risk:"Risk Assessment",
    history:"Assessment History",
    take:"Take assessment",
    training:"Training & Guides",
    trainingHint:"Short videos & tips",
    schemes:"Government Schemes",
    loan:"Apply Loan",
    session:"Book Session",
    vaccine:"Vaccination Schedule",
    feed:"Breeding & Feeding",
    sales:"Sales / Products",
    alerts:"Alerts",
    schemesList:"No schemes yet (demo)",
    loanHint:"Apply for small farm loan",
    sessionHint:"Book paid learning sessions",
    vaccineChart:"25 Sept тАФ Bird Flu",
    feedHint:"Feeding schedule and charts",
    salesHint:"Update product listings",
    ask:"Ask questions & get voice replies",
    open1:"Open Chat",
    adminDash:"ЁЯЫая╕П Admin Dashboard",
    overview:"Farm Overview",
    heat:"Heatmap",
    compliance:"Compliance Tracker",
    reports:"Reports",
    open:"Open Heatmap",
    send:"Send demo alert",
    add:"Admin can add Training videos and guide",
    not:"[Shows who hasn't done assessment]",
    csv:"Generate CSV",
    adsc:"Admin can add schemes (demo)",
    total:"Total: 0",
    low:"Low: 0 | Medium: 0 | High: 0",
    buyerDash:"ЁЯЫТ Buyer Dashboard",
    purchase:"Purchasing",
    farmDetails:"Farm Details",
    booking:"Booking",
    payment:"Payment",
    browse:"Browse Listings",
    ram:"Ramesh Poultry тАФ Moderate Risk (demo)",
    book:"Book Order",
    pendind:"Pending: тВ╣0",
    pay:"Pay Now",
    feedpig:"View Chart"
  },
  hi: {
    title: "рд╕реНрдорд╛рд░реНрдЯ рдлрд╛рд░реНрдо рд╕реЙрд▓реНрдпреВрд╢рди рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ",
    subtitle: "рдЬрд╛рд░реА рд░рдЦрдиреЗ рдХреЗ рд▓рд┐рдП рдЕрдкрдиреА рднреВрдорд┐рдХрд╛ рдЪреБрдиреЗрдВ",
    farmer: "рдХрд┐рд╕рд╛рди",
    admin: "рдкреНрд░рд╢рд╛рд╕рдХ",
    buyer: "рдЦрд░реАрджрд╛рд░/рдереЛрдХ рд╡реНрдпрд╛рдкрд╛рд░реА",
    hintLaunch: "рдЯрд┐рдк: рднреВрдорд┐рдХрд╛ рдЪреБрдиреЗрдВ тЖТ рд╕рд╛рдЗрдирдЕрдк (рдПрдХ рдмрд╛рд░) тЖТ рд▓реЙрдЧрд┐рди тЖТ рдбреИрд╢рдмреЛрд░реНрдб",
    loginTitle: "рд╕реНрдорд╛рд░реНрдЯ рдлрд╛рд░реНрдо рд╕реЙрд▓реНрдпреВрд╢рди рдореЗрдВ рд▓реЙрдЧрд┐рди рдХрд░реЗрдВ",
    signupTitle: "рдЕрдкрдирд╛ рдЦрд╛рддрд╛ рдмрдирд╛рдПрдВ",
    username: "рдЙрдкрдпреЛрдЧрдХрд░реНрддрд╛ рдирд╛рдо",
    password: "рдкрд╛рд╕рд╡рд░реНрдб",
    loginBtn: "рд▓реЙрдЧрд┐рди",
    signupBtn: "рдЦрд╛рддрд╛ рдмрдирд╛рдПрдВ",
    support: "рдР рдЪреИрдЯ+рд╕рд╣рд╛рдпрддрд╛",
    dashboard: "рдбреИрд╢рдмреЛрд░реНрдб",
    Profile:"рдкреНрд░реЛрдлрд╝рд╛рдЗрд▓",
    sup: "рд╕рд╣рд╛рдпрддрд╛",
    log:"рд▓реЙрдЧрдЖрдЙрдЯ",
    farmerDash:"ЁЯСитАНЁЯМ╛ рдХрд┐рд╕рд╛рди рдбреИрд╢рдмреЛрд░реНрдб",
    risk:"рдЬреЛрдЦрд┐рдо рдореВрд▓реНрдпрд╛рдВрдХрди",
    history:"рдореВрд▓реНрдпрд╛рдВрдХрди рдЗрддрд┐рд╣рд╛рд╕",
    take:"рдореВрд▓реНрдпрд╛рдВрдХрди рдХрд░реЗрдВ",
    training:"рдкреНрд░рд╢рд┐рдХреНрд╖рдг рдФрд░ рдорд╛рд░реНрдЧрджрд░реНрд╢рд┐рдХрд╛рдПрдБ",
    trainingHint:"рдЫреЛрдЯреА рд╡реАрдбрд┐рдпреЛ рдФрд░ рд╕реБрдЭрд╛рд╡",
    schemes:"рд╕рд░рдХрд╛рд░реА рдпреЛрдЬрдирд╛рдПрдБ",
    loan:"рдЛрдг рдХреЗ рд▓рд┐рдП рдЖрд╡реЗрджрди рдХрд░реЗрдВ",
    session:"рд╕рддреНрд░ рдмреБрдХ рдХрд░реЗрдВ",
    vaccine:"рд╡реИрдХреНрд╕реАрдиреЗрд╢рди рдХрд╛рд░реНрдпрдХреНрд░рдо",
    feed:"рдкреНрд░рдЬрдирди рдФрд░ рднреЛрдЬрди",
    sales:"рдмрд┐рдХреНрд░реА/рдЙрддреНрдкрд╛рдж",
    alerts:"рдЕрд▓рд░реНрдЯреНрд╕",
    schemesList:"рдЕрднреА рддрдХ рдХреЛрдИ рдпреЛрдЬрдирд╛рдПрдВ рдирд╣реАрдВ (рдбреЗрдореЛ)",
    loanHint:"рдЫреЛрдЯреА рдХреГрд╖рд┐ рдЛрдг рдХреЗ рд▓рд┐рдП рдЖрд╡реЗрджрди рдХрд░реЗрдВ",
    sessionHint:"рдкреЗрдб рд▓рд░реНрдирд┐рдВрдЧ рд╕рддреНрд░реЛрдВ рдХреЛ рдмреБрдХ рдХрд░реЗрдВ",
    vaccineChart:"25 рд╕рд┐рддрдВрдмрд░ - рдмрд░реНрдб рдлреНрд▓реВ",
    feedHint:"рдЦрд┐рд▓рд╛рдиреЗ рдХреЗ рдХрд╛рд░реНрдпрдХреНрд░рдо рдФрд░ рдЪрд╛рд░реНрдЯ",
    salesHint:"рдЙрддреНрдкрд╛рдж рд╕реВрдЪреА рдЕрдкрдбреЗрдЯ рдХрд░реЗрдВ",
    ask:"рдкреНрд░рд╢реНрди рдкреВрдЫреЗрдВ рдФрд░ рдЖрд╡рд╛рдЬрд╝ рдореЗрдВ рдЙрддреНрддрд░ рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВ",
    open1:"рдЪреИрдЯ рдЦреЛрд▓реЗрдВ",
    adminDash:"ЁЯЫая╕П рдкреНрд░рдмрдВрдзрдХ рдбреИрд╢рдмреЛрд░реНрдб",
    overview:"рдлрд╛рд░реНрдо рдХрд╛ рдЕрд╡рд▓реЛрдХрди",
    heat:"рд╣реАрдЯ рдЕрдк рдореИрдк",
    compliance:"рдЕрдиреБрдкрд╛рд▓рди рдЯреНрд░реИрдХрд░",
    reports:"рд░рд┐рдкреЛрд░реНрдЯ",
    open:"рдУрдкрди рд╣реАрдЯрдореИрдк",
    send:"рдбреЗрдореЛ рдЕрд▓рд░реНрдЯ рднреЗрдЬреЗрдВ",
    add:"рдПрдбрдорд┐рди рдкреНрд░рд╢рд┐рдХреНрд╖рдг рд╡реАрдбрд┐рдпреЛ рдФрд░ рдорд╛рд░реНрдЧрджрд░реНрд╢рд┐рдХрд╛ рдЬреЛрдбрд╝ рд╕рдХрддрд╛ рд╣реИ",
    not:"[рдкреНрд░рджрд░реНрд╢рд┐рдд рдХрд░реЗрдВ рдХрд┐ рдХрд┐рд╕рдиреЗ рдЖрдХрд▓рди рдирд╣реАрдВ рдХрд┐рдпрд╛ рд╣реИ]",
    csv:"рд╕реАрдПрд╕рд╡реА рдЙрддреНрдкрдиреНрди рдХрд░реЗрдВ",
    adsc:"рд╡реНрдпрд╡рд╕реНрдерд╛рдкрдХ рдпреЛрдЬрдирд╛рдПрдБ рдЬреЛрдбрд╝ рд╕рдХрддреЗ рд╣реИрдВ (рдбреЗрдореЛ)",
    total:"рдХреБрд▓: 0",
    low:"рдХрдо: 0 | рдордзреНрдпрдо: 0 | рдЙрдЪреНрдЪ: 0",
    buyerDash:"ЁЯЫТ рдЦрд░реАрджрджрд╛рд░ рдбреИрд╢рдмреЛрд░реНрдб",
    purchase:"рдЦрд░реАрджрд╛рд░реА",
    farmDetails:"рдлрд╛рд░реНрдо рдХрд╛ рд╡рд┐рд╡рд░рдг",
    booking:"рдмреБрдХрд┐рдВрдЧ",
    payment:"рднреБрдЧрддрд╛рди",
    browse:"рд╕реВрдЪреА рдмреНрд░рд╛рдЙрдЬрд╝ рдХрд░реЗрдВ",
    ram:"рд░рд╛рдореЗрд╢ рдкреЛрд▓реНрдЯреНрд░реА тАФ рдордзреНрдп рдЬреЛрдЦрд┐рдо (рдбреЗрдореЛ)",
    book:"рдкреБрд╕реНрддрдХ рдЖрджреЗрд╢",
    pendind:"рд▓рдВрдмрд┐рдд:тВ╣0",
    pay:"рдЕрдм рднреБрдЧрддрд╛рди рдХрд░реЗрдВ",
    feedpig:"рдЪрд╛рд░реНрдЯ рджреЗрдЦреЗрдВ"
  }
};

// ------------------- ADMIN: ADD SCHEME -------------------
function showAddSchemeForm() {
  document.getElementById('addSchemeForm').style.display = 'block';
}

function saveScheme() {
  const title = document.getElementById('schemeTitle').value.trim();
  const description = document.getElementById('schemeDescription').value.trim();
  const eligibility = document.getElementById('schemeEligibility').value.trim();
  const farmType = document.getElementById('schemeFarmType').value.trim();
  const expiry = document.getElementById('schemeExpiry').value;

  if (!title || !description) {
    alert('Title and Description are required!');
    return;
  }

  const schemes = JSON.parse(localStorage.getItem('schemes') || '[]');
  schemes.push({
    id: Date.now(),
    title,
    description,
    eligibility,
    farmType,
    expiry,
    createdAt: new Date().toISOString()
  });

  localStorage.setItem('schemes', JSON.stringify(schemes));
  alert('Scheme added successfully тЬЕ');

  // reset form
  document.getElementById('schemeTitle').value = '';
  document.getElementById('schemeDescription').value = '';
  document.getElementById('schemeEligibility').value = '';
  document.getElementById('schemeFarmType').value = '';
  document.getElementById('schemeExpiry').value = '';

  document.getElementById('addSchemeForm').style.display = 'none';
}

// ------------------- DISPLAY SCHEMES (FARMER / ADMIN) -------------------
function displaySchemesForUser() {
  const container = document.getElementById('schemesContainer');
  if (!container) return;

  const schemes = JSON.parse(localStorage.getItem('schemes') || '[]');
  container.innerHTML = '';

  const today = new Date().toISOString().split('T')[0];
  const currentUser = JSON.parse(localStorage.getItem('currentUser') || '{}');

  if (schemes.length === 0) {
    container.innerHTML = '<p>No schemes available.</p>';
    return;
  }

  schemes.forEach((s, index) => {
    const farmMatch = !s.farmType || (currentUser.farmType && s.farmType.toLowerCase() === currentUser.farmType.toLowerCase());
    const notExpired = !s.expiry || s.expiry >= today;

    // Show only valid schemes to farmers, all schemes to admin
    if (currentUser.role === 'farmer' && !(farmMatch && notExpired)) return;

    const div = document.createElement('div');
    div.className = 'scheme-card';
    div.innerHTML = `
      <h4>${s.title}</h4>
      <p>${s.description}</p>
      <small>Eligibility: ${s.eligibility || 'N/A'}</small><br>
      <small>Farm Type: ${s.farmType || 'All'}</small><br>
      <small>Expires: ${s.expiry || 'N/A'}</small><br>
    `;

    if (currentUser.role === 'admin') {
      const btn = document.createElement('button');
      btn.textContent = 'Delete';
      btn.className = 'delete-btn';
      btn.onclick = () => deleteScheme(index);
      div.appendChild(btn);
    }

    container.appendChild(div);
  });
}

// ------------------- DELETE SCHEME -------------------
function deleteScheme(index) {
  if (!confirm("Are you sure you want to delete this scheme?")) return;
  const schemes = JSON.parse(localStorage.getItem('schemes') || '[]');
  schemes.splice(index, 1);
  localStorage.setItem('schemes', JSON.stringify(schemes));
  displaySchemesForUser();
  alert("Scheme deleted successfully!");
}

// ------------------- LANGUAGE SWITCH -------------------
function changeLanguage(lang) {
  document.querySelectorAll("[data-lang]").forEach(el => {
    const key = el.getAttribute("data-lang");
    if (translations[lang] && translations[lang][key]) {
      el.textContent = translations[lang][key];
    }
  });
  localStorage.setItem("lang", lang);
}

// ------------------- PAGE LOAD -------------------
document.addEventListener("DOMContentLoaded", function() {
  const currentUser = JSON.parse(localStorage.getItem('currentUser') || '{}');

  // Load Government Schemes if schemesContainer exists
  if (document.getElementById('schemesContainer')) {
    displaySchemesForUser();
  }

  // Load saved language
  const savedLang = localStorage.getItem("lang") || "en";
  changeLanguage(savedLang);
});
